WEBVTT

1
00:00:00.950 --> 00:00:05.980
This video discusses tracking branches.

2
00:00:05.980 --> 00:00:09.635
We will start with the tracking branch overview.

3
00:00:09.635 --> 00:00:15.135
A tracking branch is a local branch that represents a remote branch.

4
00:00:15.135 --> 00:00:18.680
Locally, a tracking branch name starts with the remote name,

5
00:00:18.680 --> 00:00:20.145
then a forward slash,

6
00:00:20.145 --> 00:00:21.750
and then the branch name.

7
00:00:21.750 --> 00:00:23.775
If you clone a repository,

8
00:00:23.775 --> 00:00:26.915
they'll have a default local tracking branch.

9
00:00:26.915 --> 00:00:32.310
In this example, the remote repository contains a master branch with three commits.

10
00:00:32.310 --> 00:00:34.380
On the remote repository,

11
00:00:34.380 --> 00:00:36.930
the head reference points to the default branch

12
00:00:36.930 --> 00:00:39.975
that will be checked out when the repository is cloned.

13
00:00:39.975 --> 00:00:43.970
In this case, the default branch is named master.

14
00:00:43.970 --> 00:00:45.990
When we clone the remote repository,

15
00:00:45.990 --> 00:00:47.565
the same three commits,

16
00:00:47.565 --> 00:00:52.875
master branch label, and head reference will be copied to the local repository.

17
00:00:52.875 --> 00:00:55.680
You can see that the commit graph on the remote repository

18
00:00:55.680 --> 00:00:59.805
looks exactly like this part of the commit graph locally.

19
00:00:59.805 --> 00:01:03.910
After the clone, you will have the master branch checked out.

20
00:01:03.910 --> 00:01:09.055
You can see that there is an additional branch label on the local repository.

21
00:01:09.055 --> 00:01:11.130
This is the tracking branch.

22
00:01:11.130 --> 00:01:14.300
It represents the remote master branch.

23
00:01:14.300 --> 00:01:18.265
Origin is a shortcut for the URL to the remote repository,

24
00:01:18.265 --> 00:01:22.390
and master is the name of the branch on the remote repository.

25
00:01:22.390 --> 00:01:24.910
Because the clone just happened,

26
00:01:24.910 --> 00:01:27.480
these two repositories are synchronized.

27
00:01:27.480 --> 00:01:31.060
All of the master branch labels point to commit C,

28
00:01:31.060 --> 00:01:33.925
that includes the local master branch label,

29
00:01:33.925 --> 00:01:36.340
the tracking master branch label,

30
00:01:36.340 --> 00:01:39.080
and the remote master branch label.

31
00:01:39.080 --> 00:01:42.360
You can see that these three branches are related.

32
00:01:42.360 --> 00:01:46.880
Right now, they each contain the same three commits.

33
00:01:46.880 --> 00:01:53.137
A tracking branch is related to its associated remote branch and local branch,

34
00:01:53.137 --> 00:01:54.660
but they are decoupled.

35
00:01:54.660 --> 00:02:00.405
Tracking branches update separately from both the remote branch and the local branch.

36
00:02:00.405 --> 00:02:05.785
This is because tracking branches are only updated with network commands like clone,

37
00:02:05.785 --> 00:02:07.750
fetch, pull, and push.

38
00:02:07.750 --> 00:02:13.445
The tracking branch acts as a sort of intermediary between the local and remote branches.

39
00:02:13.445 --> 00:02:16.740
In this example, our tracking branch points to commit

40
00:02:16.740 --> 00:02:20.910
C. This means that at the time of the most recent network command,

41
00:02:20.910 --> 00:02:24.690
commit C was the latest commit on the remote master branch.

42
00:02:24.690 --> 00:02:27.740
Locally, we then created commit D.

43
00:02:27.740 --> 00:02:31.020
This moves the head reference and master branch label to

44
00:02:31.020 --> 00:02:33.980
commit D. The tracking branch label

45
00:02:33.980 --> 00:02:38.200
stays behind because it only moves with network commands.

46
00:02:38.200 --> 00:02:41.675
Committing is a local command.

47
00:02:41.675 --> 00:02:43.700
If we look at the remote repository,

48
00:02:43.700 --> 00:02:45.980
we can see that since our last network command,

49
00:02:45.980 --> 00:02:49.580
someone pushed a new commit E. We are now

50
00:02:49.580 --> 00:02:53.570
in a state where the three master branch labels point to different commits.

51
00:02:53.570 --> 00:02:56.760
The local master branch label points to commit D,

52
00:02:56.760 --> 00:03:00.350
the master tracking branch label points to commit C,

53
00:03:00.350 --> 00:03:03.155
and the remote master branch label points to commit

54
00:03:03.155 --> 00:03:09.020
E. The three related branches are no longer in sync.

55
00:03:09.020 --> 00:03:16.680
Next, we will discuss viewing tracking branch names.

56
00:03:16.680 --> 00:03:21.920
We have seen that cloning a remote repository automatically creates a tracking branch.

57
00:03:21.920 --> 00:03:25.915
Let's see this in action using Bitbucket and SourceTree.

58
00:03:25.915 --> 00:03:30.725
You will do something very similar in the lab that follows this video.

59
00:03:30.725 --> 00:03:36.860
We will start from scratch and create a remote repository that we will later clone.

60
00:03:36.860 --> 00:03:39.125
After logging into Bitbucket,

61
00:03:39.125 --> 00:03:40.700
click on the plus sign,

62
00:03:40.700 --> 00:03:46.455
and then under create a new, select repository.

63
00:03:46.455 --> 00:03:50.235
In this case, we named our repository ProjectE.

64
00:03:50.235 --> 00:03:52.815
We then click on create repository,

65
00:03:52.815 --> 00:03:56.030
and the remote repository is created.

66
00:03:56.030 --> 00:03:59.075
We want to clone this repository,

67
00:03:59.075 --> 00:04:01.490
but to automatically set up a tracking branch,

68
00:04:01.490 --> 00:04:03.650
it can't be empty.

69
00:04:03.650 --> 00:04:08.075
We usually make commits from SourceTree and then push them to a remote repository,

70
00:04:08.075 --> 00:04:12.720
but you can actually make commits right in the Bitbucket interface.

71
00:04:12.720 --> 00:04:17.820
In other words, the Bitbucket interface can act as a lightweight Git client.

72
00:04:17.820 --> 00:04:20.685
When you create a Bitbucket repository,

73
00:04:20.685 --> 00:04:23.120
there's a button named create README,

74
00:04:23.120 --> 00:04:26.152
that will create a commit in the repository.

75
00:04:26.152 --> 00:04:31.694
We click on that button to create a simple README file.

76
00:04:31.694 --> 00:04:36.370
We then create a simple README file and click commit.

77
00:04:36.370 --> 00:04:38.310
For the commit message,

78
00:04:38.310 --> 00:04:41.775
we specify add README.md.

79
00:04:41.775 --> 00:04:43.290
We clicked the commit button,

80
00:04:43.290 --> 00:04:46.700
and the first commit is made in the remote repository.

81
00:04:46.700 --> 00:04:50.230
In Bitbucket, you can then view the new commit.

82
00:04:50.230 --> 00:04:55.877
Here, we see our first commit with the commit message that we just entered.

83
00:04:55.877 --> 00:05:02.080
Next, we want to clone the ProjectD repository so that we have a local repository.

84
00:05:02.080 --> 00:05:04.885
You can click on the plus sign in Bitbucket,

85
00:05:04.885 --> 00:05:07.965
select the clone this repository link.

86
00:05:07.965 --> 00:05:10.060
And then in the window that opens,

87
00:05:10.060 --> 00:05:12.625
you can select clone in SourceTree.

88
00:05:12.625 --> 00:05:17.840
SourceTree will open with your clone to ProjectE repository.

89
00:05:17.840 --> 00:05:23.013
When we view the local ProjectE repository in SourceTree,

90
00:05:23.013 --> 00:05:26.790
we can see that there are three labels associated with our initial commit.

91
00:05:26.790 --> 00:05:29.603
The first label is the master label,

92
00:05:29.603 --> 00:05:32.690
this is the tip of our local master branch.

93
00:05:32.690 --> 00:05:36.180
The second label says origin/master,

94
00:05:36.180 --> 00:05:38.910
this is the tip of the tracking branch.

95
00:05:38.910 --> 00:05:43.530
Our local repository tracks the master branch of the remote repository,

96
00:05:43.530 --> 00:05:46.670
which is named origin as a shortcut.

97
00:05:46.670 --> 00:05:50.290
The third label says origin/HEAD,

98
00:05:50.290 --> 00:05:54.610
this label points to the tip of the default branch of the remote repository,

99
00:05:54.610 --> 00:05:56.930
which is the master branch.

100
00:05:56.930 --> 00:06:00.310
This is the branch that is checked out when you clone a repository.

101
00:06:00.310 --> 00:06:05.505
You will mostly see this label next to the origin/master label.

102
00:06:05.505 --> 00:06:09.140
If you look under the branches section on the left,

103
00:06:09.140 --> 00:06:11.265
you will see local branches.

104
00:06:11.265 --> 00:06:12.973
Here, we see the master branch,

105
00:06:12.973 --> 00:06:14.390
and because of the circle,

106
00:06:14.390 --> 00:06:17.040
you can see that is checked out.

107
00:06:17.040 --> 00:06:19.285
If you look under the remote section,

108
00:06:19.285 --> 00:06:23.810
you will see any remote repositories associated with this local repository,

109
00:06:23.810 --> 00:06:26.765
as well as their tracking branches.

110
00:06:26.765 --> 00:06:28.760
We have a single remote repository,

111
00:06:28.760 --> 00:06:31.490
and its shortcut name is origin.

112
00:06:31.490 --> 00:06:34.265
Origin shows two entries.

113
00:06:34.265 --> 00:06:35.580
The first is HEAD,

114
00:06:35.580 --> 00:06:39.860
which represents the tip of the default branch on the remote repository.

115
00:06:39.860 --> 00:06:41.246
The second is master,

116
00:06:41.246 --> 00:06:44.995
which is the origin/master tracking branch.

117
00:06:44.995 --> 00:06:49.380
Cloning the repository automatically set up this tracking branch.

118
00:06:49.380 --> 00:06:53.325
We can see that the three labels in our commit graph correspond to the three labels

119
00:06:53.325 --> 00:06:58.370
under branches and remotes.

120
00:06:58.370 --> 00:07:03.105
Finally, we will discuss viewing tracking branch status.

121
00:07:03.105 --> 00:07:05.660
Let's create a commit in

122
00:07:05.660 --> 00:07:09.485
the local repository and see what happens to our tracking branch.

123
00:07:09.485 --> 00:07:12.860
Here, we have modified the README.md file,

124
00:07:12.860 --> 00:07:15.625
appending a line of text to the file.

125
00:07:15.625 --> 00:07:20.217
We have then added the file to the staging area and clicked commit.

126
00:07:20.217 --> 00:07:23.000
We specified a commit message and then clicked

127
00:07:23.000 --> 00:07:27.110
commit to create the second commit in the local repository.

128
00:07:27.110 --> 00:07:33.110
Notice that we did not check the push changes immediately to origin/master checkbox.

129
00:07:33.110 --> 00:07:38.380
We will push the changes to the remote repository later.

130
00:07:38.410 --> 00:07:42.188
After creating the local commit,

131
00:07:42.188 --> 00:07:44.160
SourceTree shows you indications that

132
00:07:44.160 --> 00:07:48.240
the local and remote repositories are no longer synchronized.

133
00:07:48.240 --> 00:07:52.410
The latest commit on the commit graph has the local master branch label.

134
00:07:52.410 --> 00:07:55.830
Next to that label is the message 1 ahead.

135
00:07:55.830 --> 00:08:00.450
This means that the local master branch has one commit more than the tracking branch.

136
00:08:00.450 --> 00:08:05.320
You can see that the original commit still holds the labels related to origin.

137
00:08:05.320 --> 00:08:10.150
You can see that the tracking branch is not the same as the local master branch.

138
00:08:10.150 --> 00:08:11.555
If you look under branches,

139
00:08:11.555 --> 00:08:16.380
you'll see there is a one and then up arrow next to the local master branch.

140
00:08:16.380 --> 00:08:22.205
This means that this local branch is one commit ahead of its track tracking branch.

141
00:08:22.205 --> 00:08:26.100
Finally, the push button now has a number one message.

142
00:08:26.100 --> 00:08:31.165
This means that the local repository has one more commit than the remote tracking branch,

143
00:08:31.165 --> 00:08:37.005
and you can click push to synchronize the local and remote branches.

144
00:08:37.005 --> 00:08:42.640
If at any time the commit graph does not look like what you are expecting,

145
00:08:42.640 --> 00:08:44.550
you might want to check the column filters

146
00:08:44.550 --> 00:08:47.190
to make sure that you're displaying what you want.

147
00:08:47.190 --> 00:08:50.900
You can see three filters here.

148
00:08:50.900 --> 00:08:53.150
The first says, "All branches."

149
00:08:53.150 --> 00:08:54.845
This is the default setting.

150
00:08:54.845 --> 00:09:00.350
You can change this to view the current branch or any branch in the repository.

151
00:09:00.350 --> 00:09:04.570
The second says, "Show remote branches."

152
00:09:04.570 --> 00:09:06.745
This is the default setting.

153
00:09:06.745 --> 00:09:11.295
The other option is to hide remote branches.

154
00:09:11.295 --> 00:09:13.890
The third says, "Ancestor order."

155
00:09:13.890 --> 00:09:16.261
This also is the default setting.

156
00:09:16.261 --> 00:09:21.385
You could also choose to order the commits in the graph by date.

157
00:09:21.385 --> 00:09:24.916
If you click the push button,

158
00:09:24.916 --> 00:09:29.675
SourceTree will ask you which branch you would like to push to the remote repository.

159
00:09:29.675 --> 00:09:31.875
In this case, there is only one branch,

160
00:09:31.875 --> 00:09:34.650
so you select master and click okay to push

161
00:09:34.650 --> 00:09:39.670
the latest commit to the remote repository on Bitbucket.

162
00:09:40.110 --> 00:09:46.130
After the push, you can see that the three branch labels are now on the most recent

163
00:09:46.130 --> 00:09:51.350
commit and all of the sourced tree messages related to being one commit ahead are gone.

164
00:09:51.350 --> 00:09:57.015
The local and remote repositories are again synchronized.

165
00:09:57.015 --> 00:10:01.240
Here's a review of what we've discussed in this video.

166
00:10:01.240 --> 00:10:08.230
Tracking branches are local branches that represent remote branches.

167
00:10:08.230 --> 00:10:14.410
They are named <remote>/<branch>, for example origin/master.

168
00:10:14.410 --> 00:10:16.940
They can become out of sync with

169
00:10:16.940 --> 00:10:23.630
local branches and they are updated with network commands like clone,

170
00:10:23.630 --> 00:10:26.960
fetch, pull, and push.

171
00:10:26.960 --> 00:10:32.385
Now, it's time for you to work on some of the topics discussed in this video.

172
00:10:32.385 --> 00:10:36.000
Separate hands-on instructions are provided for you.