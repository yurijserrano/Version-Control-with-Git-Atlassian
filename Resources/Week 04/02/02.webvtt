WEBVTT

1
00:00:01.530 --> 00:00:04.485
This is the first of two
videos on pull requests.

2
00:00:04.485 --> 00:00:08.260
We will start with
a pull request overview.

3
00:00:10.704 --> 00:00:16.580
Pull requests are a feature of Git hosting
sites such as Bitbucket and GitHub.

4
00:00:16.580 --> 00:00:20.840
The ultimate goal of a pull request is
to merge a branch into the project.

5
00:00:22.530 --> 00:00:27.160
Pull requests enable team communication
related to the work of the branch.

6
00:00:27.160 --> 00:00:31.410
Notifications, related to the pull
request, can be sent to team members.

7
00:00:31.410 --> 00:00:35.970
Those team members can provide feedback or
comments, and ultimately can a have

8
00:00:35.970 --> 00:00:40.550
a say in approving the content,
this can act as a form of code review.

9
00:00:42.600 --> 00:00:47.250
There are two basic repository
configurations related to pull requests.

10
00:00:47.250 --> 00:00:51.590
The first one is a single remote
repository, a pull request in a single

11
00:00:51.590 --> 00:00:57.040
repository configuration is a request
to merge a branch of the repository.

12
00:00:57.040 --> 00:01:00.981
The second configuration
involves two remote repositories,

13
00:01:00.981 --> 00:01:05.511
in this configuration, a pull request
is a request to merge a branch from

14
00:01:05.511 --> 00:01:08.798
a forked repository into
the upstream repository.

15
00:01:08.798 --> 00:01:13.119
The fork approach is common if
the submitter doesn't have write access to

16
00:01:13.119 --> 00:01:14.730
the upstream repository.

17
00:01:16.877 --> 00:01:21.101
You can create a pull request, which
is also called opening a pull request,

18
00:01:21.101 --> 00:01:23.290
anytime during the life of the branch.

19
00:01:24.590 --> 00:01:27.700
You can open a pull request
when you create the branch,

20
00:01:27.700 --> 00:01:31.560
this enables the team to begin discussion
on the work of the branch immediately.

21
00:01:33.300 --> 00:01:37.320
You can also open a pull request when
you want comments on the branch.

22
00:01:37.320 --> 00:01:40.240
For example, you may be stuck
implementing something and

23
00:01:40.240 --> 00:01:41.800
want to ask the team for help.

24
00:01:43.180 --> 00:01:47.370
And finally, you can open the pull request
when you think the branch is ready for

25
00:01:47.370 --> 00:01:48.320
review and merging.

26
00:01:49.380 --> 00:01:50.210
As you can see,

27
00:01:50.210 --> 00:01:54.540
a pull request can be opened at any time
after the related branch is created.

28
00:01:56.460 --> 00:01:59.650
Next we will discuss single
repository pull requests.

29
00:02:01.710 --> 00:02:05.680
Before making a pull request,
you need to prepare to make the request.

30
00:02:05.680 --> 00:02:10.160
To prepare to make the pull request,
first you create a feature branch.

31
00:02:10.160 --> 00:02:13.030
This is the branch that we
hope will eventually be merged

32
00:02:13.030 --> 00:02:15.240
into a longer running branch.

33
00:02:15.240 --> 00:02:18.820
You can work on the future branch
before opening a pull request, but

34
00:02:18.820 --> 00:02:20.550
to start the team discussion,

35
00:02:20.550 --> 00:02:24.850
you can also open a pull request
immediately after creating the branch.

36
00:02:24.850 --> 00:02:27.921
You then push the branch
to the remote repository.

37
00:02:27.921 --> 00:02:30.926
Let's look at an example of preparing for
a pull request.

38
00:02:33.165 --> 00:02:37.302
We start by creating and
checking out a branch named featureX,

39
00:02:37.302 --> 00:02:41.450
the -b option of the git checkout
command creates the branch.

40
00:02:43.460 --> 00:02:49.225
Then we do some work on the branch
by creating a file named fileA.text,

41
00:02:49.225 --> 00:02:54.140
we add the file to the staging area,
we then commit the file.

42
00:02:56.420 --> 00:02:59.262
Finally, we will execute
the git push command,

43
00:02:59.262 --> 00:03:02.254
pushing the featureX branch
to the remote server.

44
00:03:02.254 --> 00:03:06.904
The set-upstream option ensures that
we set up a local tracking branch.

45
00:03:09.127 --> 00:03:11.175
When we execute the git push command,

46
00:03:11.175 --> 00:03:15.820
we can see a helpful message about
creating a pull request for the branch.

47
00:03:15.820 --> 00:03:20.651
That bitbucket URL can be used to open
a pull request directly from your browser.

48
00:03:24.139 --> 00:03:27.349
To open a pull request you
can log into bitbucket,

49
00:03:27.349 --> 00:03:31.485
navigate to your remote repository and
click on Pull requests.

50
00:03:32.710 --> 00:03:37.010
Here you can create or view any pull
request related to the repository.

51
00:03:37.010 --> 00:03:40.880
Let's create a pull request by clicking
the create a pull request link.

52
00:03:42.710 --> 00:03:45.850
You are presented with a pull
request form to fill out.

53
00:03:45.850 --> 00:03:50.278
You title your pull request, add
a description of work done on the branch,

54
00:03:50.278 --> 00:03:53.937
optionally specify specific
reviewers of the pull request,

55
00:03:53.937 --> 00:03:56.135
and then click Create pull request.

56
00:03:58.870 --> 00:04:03.327
When a pull request has been submitted to
you, you will see the pull request in your

57
00:04:03.327 --> 00:04:06.509
Bitbucket dashboard,
which is part of the Overview tab.

58
00:04:06.509 --> 00:04:10.360
You can see here that we have no pull
requests waiting for our review and

59
00:04:10.360 --> 00:04:12.912
you can see the pull
requests that we created.

60
00:04:15.701 --> 00:04:20.390
When you are reviewing a pull request, you
can see the full context of the request.

61
00:04:20.390 --> 00:04:24.500
You can review the information of the pull
request itself, you can see what has

62
00:04:24.500 --> 00:04:28.220
change in the project, and
you can see the comments that were made.

63
00:04:28.220 --> 00:04:30.269
This is where you can
add your own comments.

64
00:04:32.372 --> 00:04:37.610
You can click Approve to add to the count
of approvers of the pull request.

65
00:04:37.610 --> 00:04:41.949
Your project might require a certain
number of approvals before the merge is

66
00:04:41.949 --> 00:04:42.572
allowed.

67
00:04:42.572 --> 00:04:46.765
A person doing the merging of the pull
request can gain confidence depending

68
00:04:46.765 --> 00:04:50.579
on how many people approve it, and
by who specifically approves it.

69
00:04:52.720 --> 00:04:56.420
Click Decline to reject or
remove the pull request.

70
00:04:56.420 --> 00:04:59.333
Be careful if you do this
because it cannot be undone.

71
00:05:01.108 --> 00:05:05.664
Click Edit to update the pull request, you
do not need to do this if you add a commit

72
00:05:05.664 --> 00:05:09.360
to the branch, the pull request
will automatically be updated.

73
00:05:11.580 --> 00:05:14.571
Click Merge to begin the process
of merging the branch,

74
00:05:14.571 --> 00:05:18.019
remember that merging is the ultimate
goal of the pull request.

75
00:05:20.507 --> 00:05:23.670
You will then be asked to
select a merge strategy.

76
00:05:23.670 --> 00:05:25.550
You can create a merge commit or

77
00:05:25.550 --> 00:05:30.750
you can squash, a squash will reduce
the entire branch to one linear commit.

78
00:05:30.750 --> 00:05:34.610
You don't have to use one of these
strategies to perform the merge,

79
00:05:34.610 --> 00:05:38.540
you can use your local client to
merge the branch just as usual.

80
00:05:38.540 --> 00:05:42.094
When you push the merge to the remote
repository the pull request will

81
00:05:42.094 --> 00:05:42.715
be closed.

82
00:05:45.977 --> 00:05:49.020
After the merge, you can then
delete the remote branch label.

83
00:05:50.290 --> 00:05:54.602
Here we execute git push with the -d
option to delete the featureX branch

84
00:05:54.602 --> 00:05:55.104
label.

85
00:05:57.889 --> 00:06:00.410
Here is a review of what we've
discussed in this video.

86
00:06:01.970 --> 00:06:08.499
Pull requests are opened using an online
Git host such as Bitbucket of GitHub.

87
00:06:08.499 --> 00:06:11.957
The ultimate goal of a pull
request is to merge a branch, but

88
00:06:11.957 --> 00:06:15.084
they also facilitate team discussion and
approval.

89
00:06:17.495 --> 00:06:21.486
You can open a pull request any
time after creating the branch,

90
00:06:21.486 --> 00:06:26.017
you do not need to edit the pull request
if you add a commit to the branch.

91
00:06:28.357 --> 00:06:31.494
You can merge the pull request
using an online Git host or

92
00:06:31.494 --> 00:06:34.048
by pushing the merge
from your local client.

93
00:06:36.850 --> 00:06:39.481
Now it's time to work on the topics
discussed in this video,

94
00:06:39.481 --> 00:06:41.558
separate hands on
instructions are provided.