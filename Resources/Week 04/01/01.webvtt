WEBVTT

1
00:00:01.668 --> 00:00:04.460
This is the first of two
videos on pull requests.

2
00:00:06.160 --> 00:00:08.230
We will start with
the pull request overview.

3
00:00:10.810 --> 00:00:16.580
Pull requests are a feature of Git hosting
sites such as BitBucket and GitHub.

4
00:00:16.580 --> 00:00:20.840
The ultimate goal of a pull request is
to merge a branch into the project.

5
00:00:22.530 --> 00:00:27.242
Pull requests enable team communication
related to the work of the branch.

6
00:00:27.242 --> 00:00:31.410
Notifications related to the pull
request can be sent to team members.

7
00:00:31.410 --> 00:00:33.720
Those team members can provide feedback or

8
00:00:33.720 --> 00:00:38.460
comments and ultimately can have
a say in approving the content.

9
00:00:38.460 --> 00:00:40.550
This can act as a form of code review.

10
00:00:42.600 --> 00:00:47.250
There are two basic repository
configurations related to pull requests.

11
00:00:47.250 --> 00:00:50.150
The first is a single remote repository.

12
00:00:50.150 --> 00:00:53.360
A pull request in a single
repository configuration

13
00:00:53.360 --> 00:00:57.040
is a request to merge
a branch of the repository.

14
00:00:57.040 --> 00:01:00.840
The second configuration
involves two remote repositories.

15
00:01:00.840 --> 00:01:04.260
In this configuration,
a pull request is a request to merge

16
00:01:04.260 --> 00:01:08.990
a branch from a forked repository
into the upstream repository.

17
00:01:08.990 --> 00:01:13.110
The fork approach is common if
the submitter doesn't have write access

18
00:01:13.110 --> 00:01:14.720
to the upstream repository.

19
00:01:17.070 --> 00:01:21.480
You can create a pull request which
is also called opening a pull request

20
00:01:21.480 --> 00:01:23.290
any time during the life of the branch.

21
00:01:24.590 --> 00:01:27.700
You can open a pull request
when you create the branch.

22
00:01:27.700 --> 00:01:31.530
This enables the team to begin discussion
on the work of the branch immediately.

23
00:01:33.290 --> 00:01:37.310
You can also open a pull request when
you want comments on the branch.

24
00:01:37.310 --> 00:01:40.240
For example, you may be stuck
implementing something and

25
00:01:40.240 --> 00:01:41.800
want to ask the team for help.

26
00:01:43.180 --> 00:01:47.370
And finally, you can open the pull request
when you think the branch is ready for

27
00:01:47.370 --> 00:01:48.320
review and merging.

28
00:01:49.380 --> 00:01:50.210
As you can see,

29
00:01:50.210 --> 00:01:54.550
a pull request can be opened at any time
after the related branch is created.

30
00:01:56.480 --> 00:01:59.650
Next, we will discuss single
repository pull requests.

31
00:02:01.710 --> 00:02:05.680
Before making a pull request,
you need to prepare to make the request.

32
00:02:05.680 --> 00:02:10.160
To prepare to make the pull request,
first you create a feature branch.

33
00:02:10.160 --> 00:02:13.040
This is the branch that we
hope will eventually be merged

34
00:02:13.040 --> 00:02:15.240
into a longer running branch.

35
00:02:15.240 --> 00:02:18.700
You can work on the feature branch
before opening a pull request.

36
00:02:18.700 --> 00:02:20.510
But to start the team discussion,

37
00:02:20.510 --> 00:02:24.850
you can also open a pull request
immediately after creating the branch.

38
00:02:24.850 --> 00:02:27.320
You then push the branch
to the remote repository.

39
00:02:29.460 --> 00:02:32.740
To open a pull request,
you can log in to BitBucket,

40
00:02:32.740 --> 00:02:36.579
navigate to your remote repository and
click on Pull requests.

41
00:02:37.880 --> 00:02:41.874
Here you can create or view any pull
request related to the repository.

42
00:02:41.874 --> 00:02:46.040
Let's create a pull request by clicking
the create a pull request link.

43
00:02:47.830 --> 00:02:51.020
You are presented with a pull
request form to fill out.

44
00:02:51.020 --> 00:02:55.700
You title your pull request, add
a description of work done on the branch,

45
00:02:55.700 --> 00:02:59.470
optionally specify specific
reviewers of the pull request and

46
00:02:59.470 --> 00:03:01.360
then click create pull request.

47
00:03:04.040 --> 00:03:08.150
When a pull request has been submitted to
you, you will see the pull request in your

48
00:03:08.150 --> 00:03:11.910
BitBucket dashboard which is
part of the overview tab.

49
00:03:11.910 --> 00:03:15.644
You can see here that we have no pull
requests waiting for our review and

50
00:03:15.644 --> 00:03:18.124
you can see the pull
requests that we created.

51
00:03:21.067 --> 00:03:25.550
When you are reviewing a pull request, you
can see the full context of the request.

52
00:03:25.550 --> 00:03:28.780
You can review the information
of the pull request itself.

53
00:03:28.780 --> 00:03:31.260
You can see what has
changed in the project and

54
00:03:31.260 --> 00:03:33.380
you can see the comments that were made.

55
00:03:33.380 --> 00:03:35.230
This is where you can
add your own comments.

56
00:03:37.730 --> 00:03:42.780
You can click approve to add to the count
of approvers of the pull request.

57
00:03:42.780 --> 00:03:45.810
Your project might require
a certain number of approvals

58
00:03:45.810 --> 00:03:47.860
before the merge is allowed.

59
00:03:47.860 --> 00:03:52.173
A person doing the merging of the pull
request can gain confidence depending on

60
00:03:52.173 --> 00:03:55.848
how many people approve it, and
by who specifically approves it.

61
00:03:57.955 --> 00:04:01.590
Click decline to reject or
remove the pull request.

62
00:04:01.590 --> 00:04:04.164
Be careful if you do this
because it cannot be undone.

63
00:04:06.428 --> 00:04:08.960
Click edit to update the pull request.

64
00:04:08.960 --> 00:04:11.840
You do not need to do this if
you add a commit to the branch,

65
00:04:11.840 --> 00:04:14.369
the pull request will
automatically be updated.

66
00:04:16.751 --> 00:04:20.090
Could merge to begin the process
of merging the branch.

67
00:04:20.090 --> 00:04:23.440
Remember that merging is the ultimate
goal of the pull request.

68
00:04:25.880 --> 00:04:28.840
You will then be asked to
select a merge strategy.

69
00:04:28.840 --> 00:04:32.250
You can create a merge commit or
you can squash.

70
00:04:32.250 --> 00:04:35.920
A squash will reduce the entire
branch to one linear commit,

71
00:04:35.920 --> 00:04:39.780
you don't have to use one of these
strategies to perform the merge.

72
00:04:39.780 --> 00:04:43.700
You can use your local client to
merge the branch just as usual.

73
00:04:43.700 --> 00:04:46.124
When you push the merge
to the remote repository,

74
00:04:46.124 --> 00:04:47.748
the pull request will be closed.

75
00:04:50.782 --> 00:04:53.170
Here is a review of what we've
discussed in this video.

76
00:04:54.740 --> 00:04:59.760
Pull requests are opened using an online
Git host such as BitBucket or GitHub.

77
00:05:01.490 --> 00:05:05.120
The ultimate goal of a pull
request is to merge a branch, but

78
00:05:05.120 --> 00:05:07.980
they also facilitate team discussion and
approval.

79
00:05:10.450 --> 00:05:13.720
You can open a pull request any
time after creating the branch.

80
00:05:15.300 --> 00:05:19.103
You do not need to edit the pull request
if you add a commit to the branch.

81
00:05:21.406 --> 00:05:24.334
You can merge the pull request
using an online Git host or

82
00:05:24.334 --> 00:05:26.712
by pushing the merge
from your local client.

83
00:05:29.552 --> 00:05:32.610
Now it's time to work on the topics
discussed in this video.

84
00:05:32.610 --> 00:05:34.529
Separate hands-on
instructions are provided.